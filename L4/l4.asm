TITLE Lab4
;------------------------------------------------------------------------
;	Лр-4
;------------------------------------------------------------------------
;	Архітектура комп'ютера
;	НТУУ "КПІ"
;	ФІОТ
;	1 курс
;	ІТ-01
;------------------------------------------------------------------------
;	Автори: Тимошенко О.О., Тонкий М.О.
;---------------------Заголовок програми---------------------------------
IDEAL				;Директива - тип асемблера tasm
MODEL small			;Директива - тип моделі пам'яті							;16.07-----19.09
Stack 2048			;Директива - розмір стека

;--------------------------Макроси---------------------------------------
Macro M_Init								;Початок макросу
mov ax, @data								;ax <- @data
mov ds, ax									;ds <- ax
mov es, ax									;es <- ax
ENDM M_Init									;Кінець макросу

;---------------------Початок сегменту даних-----------------------------
DATASEG

arr_stack	dw 0BE0Dh, 063F2h, 09568h, 01091h, 04072h, 0D3FBh, 00242h, 0BE89h, 0364Bh, 0B486h, 02D48h, 0DEF9h, 0E89Eh, 047E3h, 05C3Ch, 0C4DAh
			dw 04CD7h, 0A437h, 009F6h, 0BEE4h, 0630Eh, 0364Bh, 033B8h, 05201h, 0E304h, 03E5Ch, 0E0FDh, 085CAh, 0DB12h, 066D5h, 00212h, 0A26Fh
			dw 067D8h, 0DD41h, 06A32h, 087D8h, 0E66Ah, 038D9h, 046E8h, 055ECh, 02002h, 0D0AFh, 06482h, 046DBh, 049B5h, 08CB9h, 090DAh, 0FD67h
			dw 0941Eh, 0A2D7h, 0752Ah, 0109Ch, 06DD2h, 04475h, 05CAAh, 0745Ah, 0CBFBh, 05B1Ah, 03AF5h, 0F94Ch, 084F8h, 047F3h, 01F43h, 0518Fh
			dw 0BEC0h, 0C7E2h, 02A29h, 0F49Ch, 09965h, 05668h, 076E1h, 00120h, 024B1h, 02CE3h, 0943Ah, 05587h, 052AFh, 09A1Fh, 0F852h, 08FFBh
			dw 04393h, 01C4Eh, 01CBFh, 00F80h, 04C69h, 04B58h, 04B4Fh, 07030h, 0983Ch, 06335h, 069FCh, 099F2h, 0DF40h, 0DB83h, 0A512h, 0BCFCh
			dw 085A4h, 016BFh, 09CB0h, 0CF97h, 07F3Bh, 05169h, 05F88h, 0A29Bh, 08E84h, 06058h, 0FA49h, 0B2F5h, 05705h, 02191h, 06F24h, 09659h
			dw 0DA28h, 0921Bh, 0C434h, 0A53Eh, 0637Dh, 045A1h, 040E4h, 05836h, 07B8Bh, 023B7h, 09B3Ch, 06515h, 08F9Eh, 05AC9h, 02C8Eh, 085BFh

exCode db 0

;---------------------Початок сегменту коду------------------------------
CODESEG

Start:
M_Init
				
;---------------------Копіювання масиву----------------------------------		
	call copy									;Викликаємо процедуру копіювання 7 разів відповідно до варіанту
	call copy
	call copy
	call copy
	call copy
	call copy
	call copy
	
;---------------------Розміщення масиву у стеку--------------------------
	xor si, si									;Обнулення регістру
	mov cx, 128									;Задаємо кількість повторів циклу
	w2:
		mov ax, [ds:si]							;Отримуємо значення з масиву
		push ax									;Та записуємо його у стек
		add si, 2								;Збільшуємо лічильник на 2
		loop w2
	
;---------------------Заповнення рядка стека-----------------------------
												;За допомогою базової індексації заповнюємо 7-ий рядок датами днів народження
	mov ax, 0716h								;Записуємо першу дату
	mov bx, 0760h								;Вказуємо адресу початку рядка
	mov [ss:[bx]], ax							;Заносимо до рядка дату
	mov ax, 0320h								;Записуємо наступну дату
	add bx, 2									;Переходимо до наступної позиції
	mov [ss:[bx]], ax							;Повторюємо 8 разів...
	mov ax, 0919h
	add bx, 2
	mov [ss:[bx]], ax
	mov ax, 0320h
	add bx, 2
	mov [ss:[bx]], ax
	add bx, 2
	mov ax, 0716h
	mov [ss:[bx]], ax
	mov ax, 0320h
	add bx, 2
	mov [ss:[bx]], ax
	mov ax, 0919h
	add bx, 2
	mov [ss:[bx]], ax
	mov ax, 0320h
	add bx, 2
	mov [ss:[bx]], ax
	
;---------------------Резервування нової ділянки пам'яті-----------------
;------------------Функція виділення пам'яті-----------------------
	mov ah, 048h								;Ознака переривання
	mov bx, 02h									;Розмір нової ділянки
	int 21h	

;------------------Перенесення масиву до нової ділянки-------------
	
	mov es, ax
	mov cx, 128
	xor si, si
	w3:
		pop dx
		mov [es:si], dx
		add si, 2
		loop w3
	
;------------------Функція звільнення пам'яті----------------------
	
	mov ah, 049h
	int 21h

Exit:
	mov ah, 04ch
	mov al, [exCode]
	int 21h

	PROC copy									;Процедура копіювання масиву
		mov cx, 128
		w1:
			mov ax, [ds:si]						;Отримуємо значення з масиву
			mov [ds:[si+256]], ax				;Та копіюємо його
			add si, 2							;Збільшуємо лічильник на 2
			loop w1
		ret
	ENDP copy									;Кінець процедури

END Start
